{"ast":null,"code":"import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nexport class LinkInstance {\n  constructor(container) {\n    this.container = container;\n  }\n\n  drawParticle(context, particle) {\n    const linkParticle = particle,\n          container = this.container,\n          particles = container.particles,\n          pOptions = particle.options;\n\n    if (linkParticle.links.length <= 0) {\n      return;\n    }\n\n    context.save();\n    const p1Links = linkParticle.links.filter(l => {\n      const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n      return linkFreq <= pOptions.links.frequency;\n    });\n\n    for (const link of p1Links) {\n      const p2 = link.destination;\n\n      if (pOptions.links.triangles.enable) {\n        const links = p1Links.map(l => l.destination),\n              vertices = p2.links.filter(t => {\n          const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n          return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n        });\n\n        if (vertices.length) {\n          for (const vertex of vertices) {\n            const p3 = vertex.destination,\n                  triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n\n            if (triangleFreq > pOptions.links.triangles.frequency) {\n              continue;\n            }\n\n            this.drawLinkTriangle(linkParticle, link, vertex);\n          }\n        }\n      }\n\n      if (link.opacity > 0 && container.retina.linksWidth > 0) {\n        this.drawLinkLine(linkParticle, link);\n      }\n    }\n\n    context.restore();\n  }\n\n  particleCreated(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n\n  particleDestroyed(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n\n  drawLinkLine(p1, link) {\n    const container = this.container,\n          options = container.actualOptions,\n          p2 = link.destination,\n          pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n    let opacity = link.opacity;\n    container.canvas.draw(ctx => {\n      var _a, _b, _c;\n\n      let colorLine;\n      const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n\n      if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n        const twinkleFreq = twinkle.frequency,\n              twinkleRgb = rangeColorToRgb(twinkle.color),\n              twinkling = Math.random() < twinkleFreq;\n\n        if (twinkling && twinkleRgb) {\n          colorLine = twinkleRgb;\n          opacity = getRangeValue(twinkle.opacity);\n        }\n      }\n\n      if (!colorLine) {\n        const linksOptions = p1.options.links,\n              linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorLine) {\n        return;\n      }\n\n      const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : container.retina.linksWidth,\n            maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : container.retina.linksDistance;\n      drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    });\n  }\n\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          p2 = link1.destination,\n          p3 = link2.destination,\n          triangleOptions = p1.options.links.triangles,\n          opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n    if (opacityTriangle <= 0) {\n      return;\n    }\n\n    container.canvas.draw(ctx => {\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      const pos3 = p3.getPosition();\n\n      if (getDistance(pos1, pos2) > container.retina.linksDistance || getDistance(pos3, pos2) > container.retina.linksDistance || getDistance(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n\n      let colorTriangle = rangeColorToRgb(triangleOptions.color);\n\n      if (!colorTriangle) {\n        const linksOptions = p1.options.links,\n              linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorTriangle) {\n        return;\n      }\n\n      drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    });\n  }\n\n}","map":{"version":3,"names":["drawLinkLine","drawLinkTriangle","getDistance","getLinkColor","getRangeValue","rangeColorToRgb","LinkInstance","constructor","container","drawParticle","context","particle","linkParticle","particles","pOptions","options","links","length","save","p1Links","filter","l","linkFreq","getLinkFrequency","destination","frequency","link","p2","triangles","enable","map","vertices","t","indexOf","vertex","p3","triangleFreq","getTriangleFrequency","opacity","retina","linksWidth","restore","particleCreated","particleDestroyed","p1","actualOptions","pos1","getPosition","pos2","canvas","draw","ctx","_a","_b","_c","colorLine","twinkle","lines","twinkleFreq","twinkleRgb","color","twinkling","Math","random","linksOptions","linkColor","id","undefined","linksColors","get","linksColor","width","maxDistance","linksDistance","size","warp","backgroundMask","composite","shadow","link1","link2","triangleOptions","opacityTriangle","pos3","colorTriangle"],"sources":["C:/Users/VLAD/Desktop/Study/Self Study Projects/My Projects/React/MedicalInspection/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js"],"sourcesContent":["import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n    }\n    drawParticle(context, particle) {\n        const linkParticle = particle, container = this.container, particles = container.particles, pOptions = particle.options;\n        if (linkParticle.links.length <= 0) {\n            return;\n        }\n        context.save();\n        const p1Links = linkParticle.links.filter((l) => {\n            const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n            return linkFreq <= pOptions.links.frequency;\n        });\n        for (const link of p1Links) {\n            const p2 = link.destination;\n            if (pOptions.links.triangles.enable) {\n                const links = p1Links.map((l) => l.destination), vertices = p2.links.filter((t) => {\n                    const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                    return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                });\n                if (vertices.length) {\n                    for (const vertex of vertices) {\n                        const p3 = vertex.destination, triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n                        if (triangleFreq > pOptions.links.triangles.frequency) {\n                            continue;\n                        }\n                        this.drawLinkTriangle(linkParticle, link, vertex);\n                    }\n                }\n            }\n            if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                this.drawLinkLine(linkParticle, link);\n            }\n        }\n        context.restore();\n    }\n    particleCreated(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    particleDestroyed(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : container.retina.linksWidth, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : container.retina.linksDistance;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const pos3 = p3.getPosition();\n            if (getDistance(pos1, pos2) > container.retina.linksDistance ||\n                getDistance(pos3, pos2) > container.retina.linksDistance ||\n                getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}