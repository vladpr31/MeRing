{"ast":null,"code":"import { Vector } from \"tsparticles-engine\";\nexport class PolygonPathGenerator {\n  constructor() {\n    this.dirsList = [];\n    this.options = {\n      sides: 6,\n      turnSteps: 20,\n      angle: 30\n    };\n  }\n\n  generate(p) {\n    if (p.hexStep === undefined) {\n      p.hexStep = 0;\n    }\n\n    if (p.hexDirection === undefined) {\n      p.hexDirection = this.options.sides === 6 ? (Math.random() * 3 | 0) * 2 : Math.random() * this.options.sides | 0;\n    }\n\n    if (p.hexSpeed === undefined) {\n      p.hexSpeed = p.velocity.length;\n    }\n\n    if (p.hexStep % this.options.turnSteps === 0) {\n      p.hexDirection = Math.random() > 0.5 ? (p.hexDirection + 1) % this.options.sides : (p.hexDirection + this.options.sides - 1) % this.options.sides;\n    }\n\n    p.velocity.x = 0;\n    p.velocity.y = 0;\n    p.hexStep++;\n    return Vector.create(this.dirsList[p.hexDirection].x * p.hexSpeed, this.dirsList[p.hexDirection].y * p.hexSpeed);\n  }\n\n  init(container) {\n    var _a;\n\n    const options = container.actualOptions.particles.move.path.options;\n    this.options.sides = options.sides > 0 ? options.sides : 6;\n    this.options.angle = (_a = options.angle) !== null && _a !== void 0 ? _a : 30;\n    this.options.turnSteps = options.turnSteps >= 0 ? options.turnSteps : 20;\n    this.createDirs();\n  }\n\n  update() {}\n\n  createDirs() {\n    this.dirsList = [];\n\n    for (let i = 0; i < 360; i += 360 / this.options.sides) {\n      const angle = this.options.angle + i;\n      this.dirsList.push(Vector.create(Math.cos(angle * Math.PI / 180), Math.sin(angle * Math.PI / 180)));\n    }\n  }\n\n}","map":{"version":3,"names":["Vector","PolygonPathGenerator","constructor","dirsList","options","sides","turnSteps","angle","generate","p","hexStep","undefined","hexDirection","Math","random","hexSpeed","velocity","length","x","y","create","init","container","_a","actualOptions","particles","move","path","createDirs","update","i","push","cos","PI","sin"],"sources":["C:/Users/VLAD/Desktop/Study/Self Study Projects/My Projects/React/MedicalInspection/node_modules/tsparticles-path-polygon/esm/PolygonPathGenerator.js"],"sourcesContent":["import { Vector } from \"tsparticles-engine\";\nexport class PolygonPathGenerator {\n    constructor() {\n        this.dirsList = [];\n        this.options = {\n            sides: 6,\n            turnSteps: 20,\n            angle: 30,\n        };\n    }\n    generate(p) {\n        if (p.hexStep === undefined) {\n            p.hexStep = 0;\n        }\n        if (p.hexDirection === undefined) {\n            p.hexDirection =\n                this.options.sides === 6 ? ((Math.random() * 3) | 0) * 2 : (Math.random() * this.options.sides) | 0;\n        }\n        if (p.hexSpeed === undefined) {\n            p.hexSpeed = p.velocity.length;\n        }\n        if (p.hexStep % this.options.turnSteps === 0) {\n            p.hexDirection =\n                Math.random() > 0.5\n                    ? (p.hexDirection + 1) % this.options.sides\n                    : (p.hexDirection + this.options.sides - 1) % this.options.sides;\n        }\n        p.velocity.x = 0;\n        p.velocity.y = 0;\n        p.hexStep++;\n        return Vector.create(this.dirsList[p.hexDirection].x * p.hexSpeed, this.dirsList[p.hexDirection].y * p.hexSpeed);\n    }\n    init(container) {\n        var _a;\n        const options = container.actualOptions.particles.move.path.options;\n        this.options.sides = options.sides > 0 ? options.sides : 6;\n        this.options.angle = (_a = options.angle) !== null && _a !== void 0 ? _a : 30;\n        this.options.turnSteps = options.turnSteps >= 0 ? options.turnSteps : 20;\n        this.createDirs();\n    }\n    update() {\n    }\n    createDirs() {\n        this.dirsList = [];\n        for (let i = 0; i < 360; i += 360 / this.options.sides) {\n            const angle = this.options.angle + i;\n            this.dirsList.push(Vector.create(Math.cos((angle * Math.PI) / 180), Math.sin((angle * Math.PI) / 180)));\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}