{"ast":null,"code":"import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  context.save();\n  drawLine(context, begin, end);\n  context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n  context.restore();\n}\n\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n  container.canvas.draw(ctx => {\n    var _a;\n\n    const beginPos = particle.getPosition();\n    drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n  });\n}\n\nexport class Grabber extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact() {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          interactivity = options.interactivity;\n\n    if (!interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent) {\n      return;\n    }\n\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const distance = container.retina.grabModeDistance,\n          query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n\n    for (const particle of query) {\n      const pos = particle.getPosition(),\n            pointDistance = getDistance(pos, mousePos);\n\n      if (pointDistance > distance) {\n        continue;\n      }\n\n      const grabLineOptions = interactivity.modes.grab.links,\n            lineOpacity = grabLineOptions.opacity,\n            opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n      if (opacityLine <= 0) {\n        continue;\n      }\n\n      const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n\n      if (!container.particles.grabLineColor) {\n        const linksOptions = options.interactivity.modes.grab.links;\n        container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n      }\n\n      const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n\n      if (!colorLine) {\n        return;\n      }\n\n      drawGrab(container, particle, colorLine, opacityLine, mousePos);\n    }\n  }\n\n  isEnabled(particle) {\n    var _a;\n\n    const container = this.container,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n  }\n\n  reset() {}\n\n}","map":{"version":3,"names":["ExternalInteractorBase","drawLine","getDistance","getLinkColor","getLinkRandomColor","getStyleFromRgb","isInArray","mouseMoveEvent","drawGrabLine","context","width","begin","end","colorLine","opacity","save","strokeStyle","lineWidth","stroke","restore","drawGrab","container","particle","lineColor","mousePos","canvas","draw","ctx","_a","beginPos","getPosition","retina","linksWidth","Grabber","constructor","clear","init","interact","options","actualOptions","interactivity","events","onHover","enable","status","mouse","position","distance","grabModeDistance","query","particles","quadTree","queryCircle","p","isEnabled","pos","pointDistance","grabLineOptions","modes","grab","links","lineOpacity","opacityLine","optColor","color","grabLineColor","linksOptions","blink","consent","undefined","mode","reset"],"sources":["C:/Users/VLAD/Desktop/Study/Self Study Projects/My Projects/React/MedicalInspection/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js"],"sourcesContent":["import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    context.save();\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n        var _a;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n            if (!container.particles.grabLineColor) {\n                const linksOptions = options.interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    reset() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}