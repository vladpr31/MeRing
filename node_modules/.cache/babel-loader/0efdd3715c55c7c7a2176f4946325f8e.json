{"ast":null,"code":"import { ExternalInteractorBase, drawLine, gradient, isInArray } from \"tsparticles-engine\";\n\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n  context.save();\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n  context.restore();\n}\n\nfunction lineStyle(container, ctx, p1, p2) {\n  const options = container.actualOptions,\n        connectOptions = options.interactivity.modes.connect;\n  return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\n\nfunction drawConnection(container, p1, p2) {\n  container.canvas.draw(ctx => {\n    var _a;\n\n    const ls = lineStyle(container, ctx, p1, p2);\n\n    if (!ls) {\n      return;\n    }\n\n    const pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n    drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, ls, pos1, pos2);\n  });\n}\n\nexport class Connector extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact() {\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const distance = Math.abs(container.retina.connectModeRadius),\n            query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n      let i = 0;\n\n      for (const p1 of query) {\n        const pos1 = p1.getPosition();\n\n        for (const p2 of query.slice(i + 1)) {\n          const pos2 = p2.getPosition(),\n                distMax = Math.abs(container.retina.connectModeDistance),\n                xDiff = Math.abs(pos1.x - pos2.x),\n                yDiff = Math.abs(pos1.y - pos2.y);\n\n          if (xDiff < distMax && yDiff < distMax) {\n            drawConnection(container, p1, p2);\n          }\n        }\n\n        ++i;\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    var _a;\n\n    const container = this.container,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n\n    return isInArray(\"connect\", events.onHover.mode);\n  }\n\n  reset() {}\n\n}","map":{"version":3,"names":["ExternalInteractorBase","drawLine","gradient","isInArray","drawConnectLine","context","width","lineStyle","begin","end","save","lineWidth","strokeStyle","stroke","restore","container","ctx","p1","p2","options","actualOptions","connectOptions","interactivity","modes","connect","links","opacity","drawConnection","canvas","draw","_a","ls","pos1","getPosition","pos2","retina","linksWidth","Connector","constructor","clear","init","interact","events","onHover","enable","status","mousePos","mouse","position","distance","Math","abs","connectModeRadius","query","particles","quadTree","queryCircle","p","isEnabled","i","slice","distMax","connectModeDistance","xDiff","x","yDiff","y","particle","mode","reset"],"sources":["C:/Users/VLAD/Desktop/Study/Self Study Projects/My Projects/React/MedicalInspection/node_modules/tsparticles-interaction-external-connect/esm/Connector.js"],"sourcesContent":["import { ExternalInteractorBase, drawLine, gradient, isInArray } from \"tsparticles-engine\";\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    context.save();\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    reset() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}