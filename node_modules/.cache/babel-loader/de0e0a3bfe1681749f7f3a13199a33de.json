{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_context;\n\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  const newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n\n    _Canvas_context.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n  }\n\n  clear() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    this.draw(ctx => {\n      clear(ctx, this.size);\n    });\n  }\n\n  draw(cb) {\n    if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n      return;\n    }\n\n    return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n  }\n\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const radius = particle.getRadius();\n\n    if (radius <= 0) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n    if (!pfColor && !psColor) {\n      return;\n    }\n\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n\n    if (!fColor || !sColor) {\n      if (!fColor) {\n        fColor = pfColor ? pfColor : undefined;\n      }\n\n      if (!sColor) {\n        sColor = psColor ? psColor : undefined;\n      }\n    }\n\n    const options = this.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n          opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n          strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor;\n    const colorStyles = {\n      fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n    };\n    colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n    this.draw(ctx => {\n      const transform = {};\n      const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n            container = this.container;\n\n      for (const updater of container.particles.updaters) {\n        if (updater.beforeDraw) {\n          updater.beforeDraw(particle);\n        }\n\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n\n        if (updater.getTransformValues) {\n          const updaterTransform = updater.getTransformValues(particle);\n\n          for (const key in updaterTransform) {\n            setTransformValue(transform, updaterTransform, key);\n          }\n        }\n      }\n\n      drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n\n      for (const updater of container.particles.updaters) {\n        if (updater.afterDraw) {\n          updater.afterDraw(particle);\n        }\n      }\n    });\n  }\n\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      drawPlugin(ctx, plugin, delta);\n    });\n  }\n\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  loadCanvas(canvas) {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n\n    __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        this.paintBase(this.coverColorStyle);\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n      width: this.element.offsetWidth * pxRatio,\n      height: this.element.offsetHeight * pxRatio\n    };\n\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return;\n    }\n\n    const oldSize = Object.assign({}, size);\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    this.resize();\n    const container = this.container,\n          needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n\n  getPluginParticleColors(particle) {\n    let fColor, sColor;\n\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n      }\n\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n      }\n\n      if (fColor && sColor) {\n        break;\n      }\n    }\n\n    return [fColor, sColor];\n  }\n\n  initCover() {\n    const options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n    if (coverRgb) {\n      const coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n      this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n    }\n  }\n\n  initStyle() {\n    const element = this.element,\n          options = this.container.actualOptions;\n\n    if (!element) {\n      return;\n    }\n\n    if (options.fullScreen.enable) {\n      this.originalStyle = deepExtend({}, element.style);\n      element.style.setProperty(\"position\", \"fixed\", \"important\");\n      element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n      element.style.setProperty(\"top\", \"0\", \"important\");\n      element.style.setProperty(\"left\", \"0\", \"important\");\n      element.style.setProperty(\"width\", \"100%\", \"important\");\n      element.style.setProperty(\"height\", \"100%\", \"important\");\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n\n      const value = options.style[key];\n\n      if (!value) {\n        continue;\n      }\n\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n\n  initTrail() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      paintBase(ctx, this.size, baseColor);\n    });\n  }\n\n  resetOriginalStyle() {\n    const element = this.element,\n          originalStyle = this.originalStyle;\n\n    if (element && originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n\n}\n_Canvas_context = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_context","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","constructor","container","size","height","width","generatedCanvas","options","actualOptions","trail","particles","move","backgroundMask","enable","paint","length","trailFillColor","draw","ctx","destroy","element","remove","resetOriginalStyle","cb","particle","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","transform","zSizeFactor","sizeRate","updater","updaters","beforeDraw","getColorStyles","getTransformValues","updaterTransform","composite","shadow","afterDraw","plugin","init","resize","initStyle","initCover","initTrail","initBackground","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","loadCanvas","canvas","dataset","originalStyle","offsetHeight","offsetWidth","getContext","retina","cover","coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","plugins","refresh","particleFillColor","particleStrokeColor","coverRgb","coverColor","r","g","b","a","fullScreen","setProperty","toString","fillColor","baseColor","top","left","WeakMap"],"sources":["C:/Users/VLAD/Desktop/Study/Self Study Projects/My Projects/React/MedicalInspection/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_context;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_context.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const transform = {};\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n            }\n            drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    resetOriginalStyle() {\n        const element = this.element, originalStyle = this.originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n_Canvas_context = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}